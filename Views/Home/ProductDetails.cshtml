@model ASP.NET_OLX.Models.ProductDetailsViewModel
@using System.Text.RegularExpressions


@{
    ViewData["Title"] = Model.Product.Name;
}

<link rel="stylesheet" href="~/css/productdetails.css" asp-append-version="true" />

<div class="product-details-container">
    <!-- Back Button -->
    <button onclick="window.history.back()" class="btn btn-secondary mb-3">Back to Product Listing</button>

    <!-- Main Product Section -->
    <div class="product-main">
        <!-- Product Image -->
        <div class="product-image">
            <img src="@Url.Content(Model.Product.Image)"
                 alt="@Model.Product.Name"
                 onerror="this.onerror=null;this.src='/images/no-image.png';" />
        </div>

        <!-- Product Info -->
        <div class="product-info">
            <h1 class="product-name">@Model.Product.Name</h1>
            <h2 class="product-price">@Model.Product.Price</h2>
            <p class="product-description">@Model.Product.Description</p>
            <p class="product-location"><strong>Location:</strong> @Model.Product.Location</p>

            <button class="btn btn-primary">
<a href="@Url.Action("Messages", "Account", new { sellerName = Model.Seller.Name, productId = Model.Product.ID })"
   style="color: white; text-decoration: none;">
   CHAT WITH SELLER
</a>

            </button>

            <button class="btn btn-success" id="pay-button">MAKE ADVANCED PAYMENT</button>
        </div>
    </div>


    <!-- Seller Profile Section -->
    @if (Model.Seller != null)
    {
        <div class="seller-profile">
            <h3>Seller Profile</h3>
            <div class="seller-card">
                <div class="seller-avatar">
                    <img src="/images/user-avatar.png" alt="Seller" />
                </div>
                <div class="seller-info">
                    <h4>@Model.Seller.Name</h4>
                    <p><strong>Contact:</strong> @Model.Seller.Contact</p>
                    <p><strong>Ratings:</strong> ⭐ @Model.Seller.Rating / 5</p>
                </div>
            </div>
        </div>
    }

    <!-- Seller Location Map -->
    <div class="seller-map">
        <h3>Seller Location</h3>
        <iframe width="100%" height="300"
                frameborder="0" style="border:0"
                src="https://www.google.com/maps/embed/v1/place?key=YOUR_GOOGLE_MAPS_API_KEY&q=@Model.Product.Location"
                allowfullscreen>
        </iframe>
    </div>

    <!-- Related Ads Section -->
    @if (Model.RelatedAds != null && Model.RelatedAds.Count > 0)
    {
        <div class="related-ads">
            <h3>Related Ads</h3>
            <div class="related-ads-grid">
                @foreach (var related in Model.RelatedAds)
                {
                    <div class="related-ad-card">
                        <a href="@Url.Action("ProductDetails", "Home", new { id = related.ID })">
                            <img src="@Url.Content(related.Image)"
                                 alt="@related.Name"
                                 onerror="this.onerror=null;this.src='/images/no-image.png';" />
                            <p class="related-name">@related.Name</p>
                            <p class="related-price">@related.Price</p>
                        </a>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <p>No related ads found.</p>
    }
</div>

@section Scripts {
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        document.getElementById('pay-button').onclick = function (e) {
            e.preventDefault();

            // Get clean amount from price string
            let rawAmount = "@Model.Product.Price";
            let numericAmount = rawAmount.replace(/[^\d]/g, ''); // remove ₹, commas etc.

            console.log("Sanitized Amount:", numericAmount);

            fetch('/Home/CreateRazorpayOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId: @Model.Product.ID,
                    amount: numericAmount
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert("Error: " + data.error);
                    return;
                }

                var options = {
                    "key": "@Model.RazorpayKey",
                    "currency": "INR",
                    "name": "@Model.Product.Name",
                    "description": "Advance Payment for Product ID: @Model.Product.ID",
                    "order_id": data.orderId,
                    "handler": function (response) {
                        fetch('/Home/PaymentCallback', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                razorpayPaymentId: response.razorpay_payment_id,
                                productId: @Model.Product.ID,
                                amount: numericAmount
                            })
                        })
                        .then(res => res.json())
                        .then(data => {
                            alert(data.message);
                        });
                    }
                };

                var rzp = new Razorpay(options);
                rzp.on('payment.failed', function (response) {
                    alert("Payment failed: " + response.error.description);
                });

                rzp.open();
            });
        };
    </script>
}

}
